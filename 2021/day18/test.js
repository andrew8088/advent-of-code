const assert = require("assert");
const { reduce, add, magnitude } = require("./index");

function testReduce(a, b) {
  a = JSON.stringify(reduce(a));
  b = JSON.stringify(b);
  assert.strictEqual(a, b);
}

function testAdd(a, b, c) {
  testReduce(add(a, b), c);
}

function testMagnitude(a, b) {
  assert.strictEqual(magnitude(a), b);
}

runTests();

function runTests() {
  testMagnitude(
    [
      [1, 2],
      [[3, 4], 5],
    ],
    143
  );
  testMagnitude(
    [
      [
        [[0, 7], 4],
        [
          [7, 8],
          [6, 0],
        ],
      ],
      [8, 1],
    ],
    1384
  );
  testMagnitude(
    [
      [
        [
          [1, 1],
          [2, 2],
        ],
        [3, 3],
      ],
      [4, 4],
    ],
    445
  );
  testMagnitude(
    [
      [
        [
          [3, 0],
          [5, 3],
        ],
        [4, 4],
      ],
      [5, 5],
    ],
    791
  );
  testMagnitude(
    [
      [
        [
          [5, 0],
          [7, 4],
        ],
        [5, 5],
      ],
      [6, 6],
    ],
    1137
  );
  testMagnitude(
    [
      [
        [
          [8, 7],
          [7, 7],
        ],
        [
          [8, 6],
          [7, 7],
        ],
      ],
      [
        [
          [0, 7],
          [6, 6],
        ],
        [8, 7],
      ],
    ],
    3488
  );

  // at absolute left, explode-right is a normal number
  testReduce([[[[[5, 6], 1], 2], 3], 4], [[[[0, 7], 2], 3], 4]);

  // at absolute right, explode-left is a normal number
  testReduce([7, [6, [5, [4, [3, 2]]]]], [7, [6, [5, [7, 0]]]]);

  // middle
  testReduce([[6, [5, [4, [3, 2]]]], 1], [[6, [5, [7, 0]]], 3]);

  testReduce(
    [
      [3, [2, [1, [7, 3]]]],
      [6, [5, [4, [3, 2]]]],
    ],
    [
      [3, [2, [8, 0]]],
      [9, [5, [7, 0]]],
    ]
  );

  testReduce(
    [
      [3, [2, [8, 0]]],
      [9, [5, [4, [3, 2]]]],
    ],
    [
      [3, [2, [8, 0]]],
      [9, [5, [7, 0]]],
    ]
  );

  // at aboslute left, explode-right is another pair
  testReduce(
    [
      [
        [
          [
            [5, 6],
            [1, 2],
          ],
          2,
        ],
        3,
      ],
      4,
    ],
    [[[[7, 0], 4], 3], 4]
  );
  testReduce(
    [10, [11, 12]],
    [
      [5, 5],
      [
        [5, 6],
        [6, 6],
      ],
    ]
  );

  testReduce(
    [
      [
        [[[4, 3], 4], 4],
        [7, [[8, 4], 9]],
      ],
      [1, 1],
    ],
    [
      [
        [[0, 7], 4],
        [
          [7, 8],
          [6, 0],
        ],
      ],
      [8, 1],
    ]
  );

  testAdd(
    [
      [
        [0, [4, 5]],
        [0, 0],
      ],
      [
        [
          [4, 5],
          [2, 6],
        ],
        [9, 5],
      ],
    ],
    [
      7,
      [
        [
          [3, 7],
          [4, 3],
        ],
        [
          [6, 3],
          [8, 8],
        ],
      ],
    ],
    [
      [
        [
          [4, 0],
          [5, 4],
        ],
        [
          [7, 7],
          [6, 0],
        ],
      ],
      [
        [8, [7, 7]],
        [
          [7, 9],
          [5, 0],
        ],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [4, 0],
          [5, 4],
        ],
        [
          [7, 7],
          [6, 0],
        ],
      ],
      [
        [8, [7, 7]],
        [
          [7, 9],
          [5, 0],
        ],
      ],
    ],
    [
      [
        2,
        [
          [0, 8],
          [3, 4],
        ],
      ],
      [
        [[6, 7], 1],
        [7, [1, 6]],
      ],
    ],
    [
      [
        [
          [6, 7],
          [6, 7],
        ],
        [
          [7, 7],
          [0, 7],
        ],
      ],
      [
        [
          [8, 7],
          [7, 7],
        ],
        [
          [8, 8],
          [8, 0],
        ],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [6, 7],
          [6, 7],
        ],
        [
          [7, 7],
          [0, 7],
        ],
      ],
      [
        [
          [8, 7],
          [7, 7],
        ],
        [
          [8, 8],
          [8, 0],
        ],
      ],
    ],
    [
      [
        [[2, 4], 7],
        [6, [0, 5]],
      ],
      [
        [
          [6, 8],
          [2, 8],
        ],
        [
          [2, 1],
          [4, 5],
        ],
      ],
    ],
    [
      [
        [
          [7, 0],
          [7, 7],
        ],
        [
          [7, 7],
          [7, 8],
        ],
      ],
      [
        [
          [7, 7],
          [8, 8],
        ],
        [
          [7, 7],
          [8, 7],
        ],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [7, 0],
          [7, 7],
        ],
        [
          [7, 7],
          [7, 8],
        ],
      ],
      [
        [
          [7, 7],
          [8, 8],
        ],
        [
          [7, 7],
          [8, 7],
        ],
      ],
    ],
    [
      7,
      [
        5,
        [
          [3, 8],
          [1, 4],
        ],
      ],
    ],
    [
      [
        [
          [7, 7],
          [7, 8],
        ],
        [
          [9, 5],
          [8, 7],
        ],
      ],
      [
        [
          [6, 8],
          [0, 8],
        ],
        [
          [9, 9],
          [9, 0],
        ],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [7, 7],
          [7, 8],
        ],
        [
          [9, 5],
          [8, 7],
        ],
      ],
      [
        [
          [6, 8],
          [0, 8],
        ],
        [
          [9, 9],
          [9, 0],
        ],
      ],
    ],
    [
      [2, [2, 2]],
      [8, [8, 1]],
    ],
    [
      [
        [
          [6, 6],
          [6, 6],
        ],
        [
          [6, 0],
          [6, 7],
        ],
      ],
      [
        [
          [7, 7],
          [8, 9],
        ],
        [8, [8, 1]],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [6, 6],
          [6, 6],
        ],
        [
          [6, 0],
          [6, 7],
        ],
      ],
      [
        [
          [7, 7],
          [8, 9],
        ],
        [8, [8, 1]],
      ],
    ],
    [2, 9],
    [
      [
        [
          [6, 6],
          [7, 7],
        ],
        [
          [0, 7],
          [7, 7],
        ],
      ],
      [
        [
          [5, 5],
          [5, 6],
        ],
        9,
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [6, 6],
          [7, 7],
        ],
        [
          [0, 7],
          [7, 7],
        ],
      ],
      [
        [
          [5, 5],
          [5, 6],
        ],
        9,
      ],
    ],
    [
      1,
      [
        [[9, 3], 9],
        [
          [9, 0],
          [0, 7],
        ],
      ],
    ],
    [
      [
        [
          [7, 8],
          [6, 7],
        ],
        [
          [6, 8],
          [0, 8],
        ],
      ],
      [
        [
          [7, 7],
          [5, 0],
        ],
        [
          [5, 5],
          [5, 6],
        ],
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [7, 8],
          [6, 7],
        ],
        [
          [6, 8],
          [0, 8],
        ],
      ],
      [
        [
          [7, 7],
          [5, 0],
        ],
        [
          [5, 5],
          [5, 6],
        ],
      ],
    ],
    [[[5, [7, 4]], 7], 1],
    [
      [
        [
          [7, 7],
          [7, 7],
        ],
        [
          [8, 7],
          [8, 7],
        ],
      ],
      [
        [
          [7, 0],
          [7, 7],
        ],
        9,
      ],
    ]
  );

  testAdd(
    [
      [
        [
          [7, 7],
          [7, 7],
        ],
        [
          [8, 7],
          [8, 7],
        ],
      ],
      [
        [
          [7, 0],
          [7, 7],
        ],
        9,
      ],
    ],
    [
      [[[4, 2], 2], 6],
      [8, 7],
    ],
    [
      [
        [
          [8, 7],
          [7, 7],
        ],
        [
          [8, 6],
          [7, 7],
        ],
      ],
      [
        [
          [0, 7],
          [6, 6],
        ],
        [8, 7],
      ],
    ]
  );
}
